{"version":3,"sources":["Components/Tile/Tile.js","Components/Board/Board.js","Components/Home/App.js","serviceWorker.js","index.js"],"names":["Tile","props","active","cont","onClick","click","className","disabled","height","viewBox","width","xmlns","d","cx","cy","r","strokeWidth","fill","stroke","Board","state","game","turn","gameWon","opt","winConditions","temp","this","setState","a","checkWon","turnChange","alert","console","log","i","win","b","c","isWon","againHandler","selected","Component","App","started","startHandler","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b664a411.chunk.js","sourcesContent":["import React from 'react';\r\nimport './tile.scss'\r\n\r\nconst Tile = (props) => {\r\n\r\n   if(props.active){\r\n    if (props.cont === 1) {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" disabled>\r\n                <svg height=\"36.5px\" viewBox=\"0 0 365.696 365.696\" width=\"36.5px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" /></svg>\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    else if (props.cont === 0) {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" disabled>\r\n                <svg height=\"100\"  width=\"100\">\r\n                    <circle cx=\"35\" cy=\"45\" r=\"15\"  strokeWidth=\"10\" fill=\"transparent\" />\r\n                </svg>\r\n            </button>\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" disabled>\r\n\r\n            </button>\r\n\r\n        )\r\n    }\r\n   }\r\n   else{\r\n    if (props.cont === 1) {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" >\r\n                <svg height=\"36.5px\" viewBox=\"0 0 365.696 365.696\" width=\"36.5px\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m243.1875 182.859375 113.132812-113.132813c12.5-12.5 12.5-32.765624 0-45.246093l-15.082031-15.082031c-12.503906-12.503907-32.769531-12.503907-45.25 0l-113.128906 113.128906-113.132813-113.152344c-12.5-12.5-32.765624-12.5-45.246093 0l-15.105469 15.082031c-12.5 12.503907-12.5 32.769531 0 45.25l113.152344 113.152344-113.128906 113.128906c-12.503907 12.503907-12.503907 32.769531 0 45.25l15.082031 15.082031c12.5 12.5 32.765625 12.5 45.246093 0l113.132813-113.132812 113.128906 113.132812c12.503907 12.5 32.769531 12.5 45.25 0l15.082031-15.082031c12.5-12.503906 12.5-32.769531 0-45.25zm0 0\" /></svg>\r\n            </button>\r\n\r\n        )\r\n    }\r\n\r\n    else if (props.cont === 0) {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" >\r\n                <svg height=\"100\"  width=\"100\">\r\n                    <circle cx=\"35\" cy=\"45\" r=\"15\" stroke=\"black\" strokeWidth=\"10\" fill=\"transparent\" />\r\n                </svg>\r\n            </button>\r\n\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <button onClick={props.click} className=\"tile red\" >\r\n\r\n            </button>\r\n\r\n        )\r\n    }\r\n   }\r\n\r\n}\r\nexport default Tile;","import React, { Component } from 'react';\r\nimport Tile from '../Tile/Tile'\r\nimport './Board.scss';\r\n\r\n\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        game: ['', '', '', '', '', '', '', '', ''],\r\n        turn: 0,\r\n        gameWon: false,\r\n        opt: 0,\r\n        winConditions: [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6]\r\n        ]\r\n\r\n\r\n    }\r\n    turnChange() {\r\n        const temp = this.state;\r\n        if (temp.turn === 1) {\r\n            temp.turn = 0;\r\n        }\r\n        else {\r\n            temp.turn = 1;\r\n        }\r\n        this.setState({\r\n            turn: temp.turn\r\n        })\r\n    }\r\n    againHandler() {\r\n        const temp = this.state;\r\n        temp.game = ['', '', '', '', '', '', '', '', ''];\r\n        temp.turn = 0;\r\n        temp.gameWon = false;\r\n        temp.opt = 0;\r\n        this.setState({ state: temp })\r\n    }\r\n\r\n\r\n    selected(a) {\r\n        const temp = this.state;\r\n        // console.log(temp.game[4],\"111111111111111111111111111\");\r\n        if (temp.game[a] === '') {\r\n            temp.game[a] = temp.turn;\r\n            this.setState({\r\n                game: temp.game,\r\n                opt: temp.opt + 1\r\n            })\r\n            this.checkWon();\r\n            if (!this.state.gameWon) {\r\n                this.turnChange();\r\n            }\r\n        }\r\n        else {\r\n            alert(\"Block Already Marked\");\r\n            // console.log(this.state)\r\n        }\r\n\r\n        return;\r\n    }\r\n    checkWon() {\r\n        console.log(this.state, \"checkwon\");\r\n        const temp = this.state;\r\n        for (let i = 0; i <= 7; i++) {\r\n            const win = temp.winConditions[i];\r\n            let a = temp.game[win[0]];\r\n            let b = temp.game[win[1]];\r\n            let c = temp.game[win[2]];\r\n            console.log(a,b,c ,\"win conditions\")\r\n            \r\n            if (a === '' || b === '' || c === '') {\r\n                continue;\r\n            }\r\n            if (a === b && b === c) {\r\n                temp.gameWon =true;\r\n                this.setState({ gameWon: temp.gameWon })\r\n                console.log(this.state.gameWon);\r\n                break\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const isWon = this.state.gameWon;\r\n        if (!this.state.gameWon && this.state.opt <= 8) {\r\n\r\n\r\n            return (\r\n                <div>\r\n                    <div className=\"hover\">\r\n                        {isWon ? <h3>Player {this.state.turn + 1} Won the game</h3> : <h3>Game Tied</h3>}\r\n                        <button className=\"btn\" onClick={() => this.againHandler()}>Play Again</button>\r\n                    </div>\r\n                    <h3>Player {this.state.turn + 1}'s turn </h3>\r\n                    <div className=\"board\" >\r\n                        <div className=\"row row-1\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(0)} cont={this.state.game[0]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(1)} cont={this.state.game[1]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(2)} cont={this.state.game[2]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                        <div className=\"row row-2\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(3)} cont={this.state.game[3]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(4)} cont={this.state.game[4]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(5)} cont={this.state.game[5]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                        <div className=\"row row-3\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(6)} cont={this.state.game[6]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(7)} cont={this.state.game[7]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(8)} cont={this.state.game[8]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"hover down\">\r\n                        {isWon ? <h3>Player {this.state.turn + 1} Won the game</h3> : <h3>Game Tied</h3>}\r\n                        <button className=\"btn\" onClick={() => this.againHandler()}>Play Again</button>\r\n                    </div>\r\n                    <h3>Player {this.state.turn + 1}'s turn </h3>\r\n                    <div className=\"board filter\">\r\n                        <div className=\"row row-1\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(0, 0)} cont={this.state.game[0][0]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(0, 1)} cont={this.state.game[0][1]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(0, 2)} cont={this.state.game[0][2]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                        <div className=\"row row-2\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(1, 0)} cont={this.state.game[1][0]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(1, 1)} cont={this.state.game[1][1]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(1, 2)} cont={this.state.game[1][2]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                        <div className=\"row row-3\">\r\n                            <div className=\"col-1\"><Tile click={() => this.selected(2, 0)} cont={this.state.game[2][0]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-2\"><Tile click={() => this.selected(2, 1)} cont={this.state.game[2][1]} active={this.state.gameWon} /></div>\r\n                            <div className=\"col-3\"><Tile click={() => this.selected(2, 2)} cont={this.state.game[2][2]} active={this.state.gameWon} /></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n\r\n}\r\nexport default Board;","import React, { Component } from 'react';\nimport './App.css';\nimport Board from '../Board/Board'\n\nclass App extends Component {\n  state={\n    started:false\n  }\n  startHandler(){\n    this.setState({started:true})\n  }\n  render(){\n   \n    \n  return (\n    <div className=\"App\">\n     <div>\n        <h1>Tic Tac Toe</h1>\n     </div>\n     {this.state.started?\n     <Board/>\n     :\n     <button className=\"btn\" onClick={()=>this.startHandler()}>Start New Game</button>\n     }\n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/Home/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}